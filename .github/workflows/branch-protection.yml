name: Branch Protection

on:
  pull_request:
    branches: [ master, main ]
  push:
    branches: [ master, main ]

jobs:
  # Enforce branch protection requirements
  branch-protection:
    name: Branch Protection Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Check PR requirements
      run: |
        echo "üõ°Ô∏è Enforcing branch protection requirements..."
        echo "‚úÖ This workflow ensures all required checks pass before merging"
        echo "üìã Required checks:"
        echo "   - Code formatting must pass"
        echo "   - Linting must pass"
        echo "   - All tests must pass"
        echo "   - Build must succeed"
        echo "   - Coverage thresholds must be met"

  # Block direct pushes to protected branches
  block-direct-push:
    name: Block Direct Push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Block direct push to master
      run: |
        echo "üö´ Direct pushes to master branch are not allowed!"
        echo "üìù Please use the following process:"
        echo "   1. Create a feature branch"
        echo "   2. Make your changes"
        echo "   3. Create a pull request"
        echo "   4. Wait for all checks to pass"
        echo "   5. Get required reviews"
        echo "   6. Merge via GitHub UI"
        exit 1

  # Ensure PR has required labels and metadata
  pr-metadata-check:
    name: PR Metadata Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Check PR title and description
      shell: bash
      run: |
        echo "üìù Checking PR metadata..."
        
        # Check if PR title follows conventional commits
        PR_TITLE="${{ github.event.pull_request.title }}"
        if echo "$PR_TITLE" | grep -Eq '^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+'; then
          echo "‚úÖ PR title follows conventional commits format"
        else
          echo "‚ö†Ô∏è PR title should follow conventional commits format"
          echo "   Examples: feat: add new feature, fix: resolve bug, docs: update readme"
        fi
        
        # Check if PR has description
        PR_BODY_LENGTH=$(echo '${{ github.event.pull_request.body }}' | wc -c)
        if [ "$PR_BODY_LENGTH" -gt 10 ]; then
          echo "‚úÖ PR has description"
        else
          echo "‚ö†Ô∏è PR should have a description explaining the changes"
        fi

  # Validate that all required CI checks are configured
  validate-ci-checks:
    name: Validate CI Configuration
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate CI workflow exists
      run: |
        echo "üîç Validating CI/CD configuration..."
        
        if [ -f ".github/workflows/ci.yml" ]; then
          echo "‚úÖ CI workflow found"
        else
          echo "‚ùå CI workflow not found at .github/workflows/ci.yml"
          exit 1
        fi
        
        # Check that CI workflow has required jobs
        if grep -q "format-check:" .github/workflows/ci.yml; then
          echo "‚úÖ Format check job found"
        else
          echo "‚ùå Format check job not found in CI workflow"
          exit 1
        fi
        
        if grep -q "lint-check:" .github/workflows/ci.yml; then
          echo "‚úÖ Lint check job found"
        else
          echo "‚ùå Lint check job not found in CI workflow"
          exit 1
        fi
        
        if grep -q "test:" .github/workflows/ci.yml; then
          echo "‚úÖ Test job found"
        else
          echo "‚ùå Test job not found in CI workflow"
          exit 1
        fi
        
        echo "‚úÖ All required CI checks are configured"

  # Summary job that all other jobs depend on
  branch-protection-summary:
    name: Branch Protection Summary
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [branch-protection, pr-metadata-check, validate-ci-checks]
    
    steps:
    - name: Protection summary
      run: |
        echo "üõ°Ô∏è Branch Protection Summary"
        echo "=========================="
        echo "‚úÖ All branch protection checks completed"
        echo "üîí Master branch is protected with the following requirements:"
        echo "   - Pull requests are required"
        echo "   - All CI checks must pass"
        echo "   - Code review is recommended"
        echo "   - Direct pushes are blocked"
        echo ""
        echo "üìã This PR must pass the following before merging:"
        echo "   ‚úÖ Code formatting check"
        echo "   ‚úÖ Linting check"  
        echo "   ‚úÖ All tests pass"
        echo "   ‚úÖ Build succeeds"
        echo "   ‚úÖ Coverage requirements met"
        echo ""
        echo "üéâ Ready for review and merge!"
