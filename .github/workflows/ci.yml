name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npx prisma generate
    
    - name: Check code formatting
      run: npm run format:check
    
    - name: Run linting
      run: npm run lint
    
    - name: Validate test coverage for new code
      run: npm run validate:tests || echo "Coverage validation script not found, continuing..."
    
    - name: Run unit tests with coverage
      run: npm run test:ci
      
    - name: Check coverage thresholds
      run: |
        echo "Checking if coverage meets minimum requirements..."
        npm run test:required || { echo "‚ùå Coverage requirements not met"; exit 1; }
        
    - name: Validate all source files have tests
      run: |
        echo "Validating test coverage for all source files..."
        missing_tests=()
        
        # Check repository files
        for file in src/repositories/*.ts; do
          filename=$(basename "$file" .ts)
          if [ ! -f "tests/repositories/${filename}.test.ts" ]; then
            missing_tests+=("Repository: $file")
          fi
        done
        
        # Check route files
        for file in src/routes/*.ts; do
          filename=$(basename "$file" .ts)
          if [ ! -f "tests/routes/${filename}.test.ts" ]; then
            missing_tests+=("Route: $file")
          fi
        done
        
        # Check utility files
        for file in src/utils/*.ts; do
          filename=$(basename "$file" .ts)
          if [ ! -f "tests/utils/${filename}.test.ts" ]; then
            missing_tests+=("Utility: $file")
          fi
        done
        
        if [ ${#missing_tests[@]} -gt 0 ]; then
          echo "‚ùå Missing tests for the following files:"
          printf '%s\n' "${missing_tests[@]}"
          echo ""
          echo "üö´ All source files must have corresponding unit tests!"
          echo "üìù Please create test files following the pattern: tests/<module>/<filename>.test.ts"
          exit 1
        else
          echo "‚úÖ All source files have corresponding test files!"
        fi
    
    - name: Run build
      run: npm run build
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: true

 